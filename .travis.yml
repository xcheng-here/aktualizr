dist: xenial
language: minimal
addons:
  apt:
    packages:
      - "python3"
      - "python3-pip"
git:
  depth: false
branches:
  only:
    - master
    - /^\d\d\d\d\.\d+(-\w+)?$/
cache:
  directories:
    - ccache-bionic
    - ccache-xenial
    - ccache-debian
env:
  matrix:
    - DOCKERFILE=docker/Dockerfile.ubuntu.bionic SCRIPT=scripts/test.sh
      DARGS="-eTEST_CMAKE_BUILD_TYPE=Valgrind -eTEST_WITH_COVERAGE=1 -eTEST_WITH_P11=1 -eTEST_WITH_DOCKERAPP=1 -eTEST_WITH_FAULT_INJECTION=1 -eTEST_TESTSUITE_EXCLUDE=credentials -eTEST_SOTA_PACKED_CREDENTIALS=dummy-credentials -eCCACHE_DIR=/aktualizr/ccache-bionic"
    - DOCKERFILE=docker/Dockerfile.debian.testing SCRIPT=scripts/test.sh
      DARGS="-eTEST_CC=clang -eTEST_WITH_LOAD_TESTS=1 -eTEST_WITH_TESTSUITE=0 -eTEST_WITH_STATICTESTS=1 -eTEST_WITH_DOCS=1 -eCCACHE_DIR=/aktualizr/ccache-debian"
    - DEPLOY_SRC=1 DEPLOY_PKGS=1 RELEASE_NAME=ubuntu_18.04 DOCKERFILE=docker/Dockerfile.ubuntu.bionic
      SCRIPT=scripts/build_ubuntu.sh INSTALL_DOCKERFILE=docker/Dockerfile-test-install.ubuntu.bionic
      DARGS="-eTEST_INSTALL_RELEASE_NAME=-ubuntu_18.04 -eCCACHE_DIR=/aktualizr/ccache-bionic"
    - DEPLOY_PKGS=1 RELEASE_NAME=ubuntu_16.04 DOCKERFILE=docker/Dockerfile.ubuntu.xenial
      SCRIPT=scripts/build_ubuntu.sh INSTALL_DOCKERFILE=docker/Dockerfile-test-install.ubuntu.xenial
      DARGS="-eTEST_INSTALL_RELEASE_NAME=-ubuntu_16.04 -eCCACHE_DIR=/aktualizr/ccache-xenial"
services:
- docker
script:
- docker build -t advancedtelematic/aktualizr -f ${DOCKERFILE} .
- ci_env=`bash <(curl -s https://codecov.io/env)`
- timeout --foreground 35m docker run -v $TRAVIS_BUILD_DIR:/aktualizr -v /persistent:/persistent -w /aktualizr $ci_env $DARGS -it advancedtelematic/aktualizr ${SCRIPT}
- if [[ $DEPLOY_PKGS = 1 ]]; then ./scripts/test_garage_deploy_deb.sh /persistent "${INSTALL_DOCKERFILE}"; fi
